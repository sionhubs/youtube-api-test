<!-- 영상 시청화면을 나타내는 html 파일 -->
<!DOCTYPE html>
<html lang="en">
  <head>
    <meta charset="UTF-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>유튜브 중독방지 웹서비스</title>
    <link rel="stylesheet" href="/styles/sidebar.css" />
    <script
      src="https://kit.fontawesome.com/510fbf9652.js"
      crossorigin="anonymous"
      defer
    ></script>
  </head>
  <body>
    <%- include('includes/sidebar') %>
    <!-- 유튜브 영상을 띄우는 코드 -->
    <!-- 1. 영상이 노출될 영역을 확보한다. 
    	 api가 제대로 작동하면 <div>에 자동으로 <iframe> 태그가 load될 것 이다. -->
    <div id="player"></div>

    <!-- 시간 표시를 위한 공간 -->
    <div id="timer">Time Left:</div>

    <script>
      // 2. 이 코드는 Iframe Player API를 비동기적으로 로드한다. !!필수!!
      var tag = document.createElement("script");
      tag.src = "https://www.youtube.com/iframe_api";
      var firstScriptTag = document.getElementsByTagName("script")[0];
      firstScriptTag.parentNode.insertBefore(tag, firstScriptTag);

      // 3. API 코드를 다운로드 받은 다음에 <iframe>을 생성하는 기능 (youtube player도 더불어)
      var player;
      function onYouTubeIframeAPIReady() {
        player = new YT.Player("player", {
          height: "360", //변경가능-영상 높이
          width: "640", //변경가능-영상 너비
          videoId: "M7lc1UVf-VE", //변경-영상ID
          playerVars: {
            rel: 0, //연관동영상 표시여부(0:표시안함)
            controls: 1, //플레이어 컨트롤러 표시여부(0:표시안함)
            autoplay: 1, //자동재생 여부(1:자동재생 함, mute와 함께 설정)
            loop: 1, //반복재생여부(1:반복재생 함)
            playsinline: 1, //iOS환경에서 전체화면으로 재생하지 않게
            playlist: "<%= video %>", //재생할 영상 리스트
          },
          events: {
            onReady: onPlayerReady, //onReady 상태일 때 작동하는 function이름
            onStateChange: onPlayerStateChange, //onStateChange 상태일 때 작동하는 function이름
          },
        });
      }

      // 시간 제한을 10분으로 설정
      var timeLimit = 10 * 60; // 10분을 초 단위로 계산

      var timerInterval; // 타이머 인터벌 변수

      // 4. API는 비디오 플레이어가 준비되면 아래의 function을 불러올 것이다.
      function onPlayerReady(event) {
        event.target.playVideo();

        // 타이머 시작
        startTimer();
      }

      // 5. API는 플레이어의 상태가 변화될 때 아래의 function을 불러올 것이다.
      //    이 function은 비디오가 재생되고 있을 때를 가르킨다.(state=1),
      var done = false;
      function onPlayerStateChange(event) {
        if (event.data == YT.PlayerState.PLAYING && !done) {
          done = true;
        }
        // 비디오가 멈출 때
        if (event.data == YT.PlayerState.PAUSED) {
          // 타이머 정지
          stopTimer();
        }

        // 비디오가 다시 재생될 때
        if (event.data == YT.PlayerState.PLAYING) {
          // 타이머 시작
          startTimer();
        }
      }

      // 타이머 시작 함수
      function startTimer() {
        var timeLeft = timeLimit;
        var timerElement = document.getElementById("timer"); // 타이머를 표시할 요소

        timerInterval = setInterval(function () {
          timeLeft--;
          timerElement.textContent = "Time Left: " + timeLeft + " seconds";

          // 시간이 다 되었을 때
          if (timeLeft <= 0) {
            clearInterval(timerInterval);
            timerElement.textContent = "Time's up!";
            // 여기에 원하는 동작 추가
          }
        }, 1000); // 1초마다 타이머 실행
      }

      // 타이머 정지 함수
      function stopTimer() {
        clearInterval(timerInterval);
      }
    </script>
  </body>
</html>
